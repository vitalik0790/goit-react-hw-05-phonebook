{"version":3,"sources":["components/phoneBook/PhoneBook.module.css","components/phoneBook/contactFilter/ContactFilter.module.css","components/phoneBook/notification/Notification.module.css","components/phoneBook/contactForm/ContactForm.module.css","components/phoneBook/contactForm/ContactForm.js","components/phoneBook/contactList/ContactList.js","components/phoneBook/contactFilter/ContactFilter.js","components/phoneBook/notification/Notification.js","components/phoneBook/PhoneBook.js","components/App.js","index.js","components/phoneBook/contactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","setState","value","handleSubmit","preventDefault","props","addContact","onSubmit","this","className","s","form","label","input","type","onChange","button","Component","ContactList","contacts","deleteContact","TransitionGroup","component","list","map","contact","CSSTransition","timeout","classNames","listItem","data-id","id","onClick","ContactFilter","filter","onHandleFilter","tyype","Notification","Styles","NotificationWrapper","PhoneBook","newContact","showAlert","uuidv4","find","el","toLowerCase","setTimeout","prevState","dataset","getFiltredContacts","includes","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","in","appear","title","length","unmountOnExit","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f7247b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"PhoneBook_appear__2oRwY\",\"appearActive\":\"PhoneBook_appearActive__297z1\",\"title\":\"PhoneBook_title__15WJb\",\"enter\":\"PhoneBook_enter__1PJMC\",\"enterActive\":\"PhoneBook_enterActive__1XkHO\",\"exit\":\"PhoneBook_exit__UhFTg\",\"exitActive\":\"PhoneBook_exitActive__1aAdI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactFilter_input__2RWCZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotificationWrapper\":\"Notification_NotificationWrapper__2SttF\",\"appear\":\"Notification_appear__1b1bE\",\"appearActive\":\"Notification_appearActive__3ggh-\",\"exit\":\"Notification_exit__2Cr_O\",\"exitActive\":\"Notification_exitActive__3vnNS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__306Aq\",\"label\":\"ContactForm_label__33pDR\",\"input\":\"ContactForm_input__nzLXU\",\"button\":\"ContactForm_button__pItBh\"};","import React, { Component } from 'react'\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const name = e.target.name;\r\n        this.setState({ [name]: e.target.value })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.addContact({ name: this.state.name, number: this.state.number })\r\n        this.setState({ name: '', number: \"\" })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit} className={s.form}>\r\n                    <label className={s.label}>\r\n                        Name\r\n                    <input className={s.input} name=\"name\" type=\"text\" value={this.state.name} onChange={this.handleChange}></input>\r\n                    </label>\r\n                    <label className={s.label}>\r\n                        Number\r\n                    <input className={s.input} name=\"number\" type=\"tel\" value={this.state.number} onChange={this.handleChange}></input>\r\n                    </label>\r\n                    <button className={s.button} type=\"submit\">Add contact</button>\r\n                </form>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n    return (\r\n        <div>\r\n            <h2>Contacts</h2>\r\n            <TransitionGroup component='ul' className={s.list}>\r\n                {contacts.map(contact => {\r\n                    return (\r\n                        <CSSTransition\r\n                            key={contact.id}\r\n                            timeout={250}\r\n                            classNames={s}>\r\n                            <li className={s.listItem}>\r\n                                <span className={s.name}>{contact.name}</span>: <span>{contact.number}</span>\r\n                                <button className={s.button} type=\"button\" data-id={contact.id} onClick={deleteContact}>Delete</button>\r\n                            </li>\r\n                        </CSSTransition>)\r\n                })}\r\n            </TransitionGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            name: PropTypes.string,\r\n            number: PropTypes.string,\r\n            id: PropTypes.string,\r\n        }),\r\n    ),\r\n    onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactFilter.module.css';\r\n\r\nconst ContactFilter = ({ filter, onHandleFilter }) => {\r\n    return (\r\n        <div>\r\n            <h3>Find contacts by name</h3>\r\n            <input className={s.input} tyype=\"text\" value={filter} onChange={onHandleFilter}></input>\r\n        </div>\r\n    );\r\n}\r\n\r\nContactFilter.propTypes = {\r\n    filter: PropTypes.string,\r\n    onHandleFilter: PropTypes.func,\r\n};\r\n\r\nexport default ContactFilter;","import React from 'react'\r\nimport Styles from './Notification.module.css'\r\n\r\nconst Notification = ({ name }) => {\r\n    return (\r\n        <div className={Styles.NotificationWrapper}>\r\n            {`${name} is already in Contacts`}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react'\r\nimport ContactForm from './contactForm/ContactForm'\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactList from './contactList/ContactList';\r\nimport ContactFilter from './contactFilter/ContactFilter';\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport s from './PhoneBook.module.css';\r\nimport Notification from './notification/Notification';\r\n\r\n\r\n\r\nclass PhoneBook extends Component {\r\n    state = {\r\n        contacts: [],\r\n        filter: \"\",\r\n        newContact: null,\r\n        showAlert: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        const persistedContacts = localStorage.getItem(\"contacts\")\r\n        if (persistedContacts) {\r\n            this.setState({\r\n                contacts: JSON.parse(persistedContacts)\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.contacts !== this.state.contacts) {\r\n            localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n        }\r\n    }\r\n\r\n    addContact = ({ name, number }) => {\r\n        const { contacts } = this.state;\r\n        const contact = {\r\n            id: uuidv4(),\r\n            name,\r\n            number,\r\n        };\r\n\r\n        if (contacts.find(\r\n            el => el.name.toLowerCase() === name.toLowerCase(),\r\n        )) {\r\n            this.setState({ newContact: contact.name, showAlert: true })\r\n            setTimeout(() => this.setState({ newContact: null, showAlert: false }), 2500);\r\n            return;\r\n        }\r\n        this.setState(prevState => {\r\n            return {\r\n                contacts: [...prevState.contacts, contact],\r\n            };\r\n        });\r\n\r\n    };\r\n\r\n    deleteContact = (e) => {\r\n        const id = e.target.dataset.id\r\n        this.setState({ contacts: [...this.state.contacts.filter(contact => contact.id !== id)] })\r\n    }\r\n\r\n    onHandleFilter = (e) => {\r\n        this.setState({ filter: e.target.value })\r\n    }\r\n\r\n    getFiltredContacts = () => {\r\n        const { contacts, filter } = this.state;\r\n        return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\r\n    }\r\n\r\n\r\n    render() {\r\n        const { newContact, showAlert } = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <CSSTransition\r\n                    in={true}\r\n                    appear={true}\r\n                    timeout={500}\r\n                    classNames={s}\r\n                >\r\n                    <h1 className={s.title}>Phonebook</h1>\r\n                </CSSTransition>\r\n                <ContactForm addContact={this.addContact} />\r\n                {this.state.contacts.length > 0 && <ContactFilter filter={this.state.filter} onHandleFilter={this.onHandleFilter} />}\r\n                <ContactList contacts={this.getFiltredContacts()} deleteContact={this.deleteContact} />\r\n                <CSSTransition in={showAlert} appear={true} timeout={250} classNames={s} unmountOnExit>\r\n                    <Notification name={newContact} />\r\n                </CSSTransition>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default PhoneBook;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport PhoneBook from './phoneBook/PhoneBook';\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <PhoneBook />\r\n    );\r\n}\r\n\r\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2zDEA\",\"listItem\":\"ContactList_listItem__RTre5\",\"button\":\"ContactList_button__1m0I0\",\"name\":\"ContactList_name__2mYdS\",\"enter\":\"ContactList_enter__2izzs\",\"enterActive\":\"ContactList_enterActive__309pe\",\"exit\":\"ContactList_exit__AXeQE\",\"exitActive\":\"ContactList_exitActive__1JQNB\"};"],"sourceRoot":""}